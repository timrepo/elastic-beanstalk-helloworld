version: '1'
services:
  amira_server:
    container_name: amira_api_server
    image: thomaspoignant/hello-world-rest-json
    depends_on:
      wait-for-db:
        condition: service_completed_successfully  
    ports:
      - "8080:8080"
    networks:
      - postgres-network
  

  postgresql:
    container_name: postgres_db
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      # - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_PASSWORD=bn_password213
      - POSTGRESQL_DATABASE=bitnami_keycloak
      - POSTGRES_MULTIPLE_DATABASES="aurablue_staging,postgres"
      # for user postgres
      - POSTGRESQL_POSTGRES_PASSWORD=hotflashessuck
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U bn_keycloak -d bitnami_keycloak'"]
      interval: 5s
      timeout: 30s
      retries: 3
    networks:
      - postgres-network
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_data:/var/lib/postgresql/data'
      # - ./scripts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  
  wait-for-db:
    image: atkrad/wait4x
    depends_on:
      - postgresql
    networks:
      - postgres-network
    command: tcp postgres_db:5432 -t 20s -i 250ms

networks:
  postgres-network:
    name: postgres-network
    driver: bridge

volumes:
  postgresql_data:
    driver: local
